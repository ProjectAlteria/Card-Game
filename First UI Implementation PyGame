#5673324
#I wanted to build a UI to test my Fisher-Yates shuffling algorithm because we don't have the cards yet 
#I played around on PyGame and now we have a yellow screen with purple rectangles we can move 
#The code will obviously be edited later on to reflect the changes made to the game 
import pygame
import random
pygame.init()
screen = pygame.display.set_mode((1240, 720))
pygame.display.set_caption('Naval Battle Drag and Drop')
active_cards = None
cards = []
for i in range(5):
    A1 = random.randint(50, 700)
    A2 = random.randint(50, 350)
    A3 = random.randint(35, 65)
    A4 = random.randint(35, 65)
    card = pygame.Rect(A1, A2, A3, A4)
    cards.append(card)
run =True
while run:
    screen.fill('yellow')
#The code written below this comment is very essential for handling mouse click events 
    for card in cards:
        pygame.draw.rect(screen ,'purple', card)
#The code below this line is reusable because the player will interact with our game using a mouse/ touchpad not a keyboard #5673324
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                for num, card in enumerate(cards):
                    if card.collidepoint(event.pos):
                        active_cards = num

        if event.type == pygame.MOUSEBUTTONUP:
            if event.button == 1:
                active_cards = None

        if event.type == pygame.MOUSEMOTION:
            if active_cards != None:
                cards[active_cards].move_ip(event.rel)

        if event.type == pygame.QUIT:
            run = False

    pygame.display.flip()

pygame.quit()
#5673324 
